{
  "openapi": "3.0.0",

  
  "paths": {
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "Login a user",
        "description": "This operation authenticates a user, creates a session and returns a user object containing a JWT token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logged in successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResDTO"
                }
              }
            }
          },
          "401": {
            "description": "User unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundExceptionResDTO"
                }
              }
            }
          },
          "429": {
            "description": "Too many attempts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequest"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication & Authorization"
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "operationId": "AuthController_forgotPassword",
        "summary": "Forgot Password",
        "description": "Trigger a password reset email",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForgotPasswordResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundExceptionResDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication & Authorization"
        ]
      }
    },
    "/auth/change-password": {
      "post": {
        "operationId": "AuthController_changePassword",
        "summary": "Change Password",
        "description": "Change user password with validation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangePasswordResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid password format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication & Authorization"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/am/accounts": {
      "get": {
        "operationId": "AccountController_list",
        "summary": "List Accounts",
        "description": "Retrieve a paginated list of accounts.\n    - Supports filtering and sorting\n    - Returns active accounts by default\n    - Can filter by parent account\n    - Includes account type and status",
        "parameters": [
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter query in JSON format. Example: {\"where\":[{\"key\":\"name\",\"value\":\"test\"}],\"orderBy\":\"createdAt DESC\"}",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of accounts with pagination metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountListResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Account Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/am/account/{id}": {
      "get": {
        "operationId": "AccountController_getAccountDetail",
        "summary": "View Account Details",
        "description": "Retrieve detailed information about a specific account",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountViewResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid account ID or account not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Account Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "patch": {
        "operationId": "AccountController_updateAccount",
        "summary": "Update Account",
        "description": "Update an existing account's information",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountUpdateResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or account not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Account Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "delete": {
        "operationId": "AccountController_deleteAccount",
        "summary": "Delete Account",
        "description": "Soft delete an account from the system",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDeleteResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Cannot delete self or insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Account Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/am/account": {
      "post": {
        "operationId": "AccountController_create",
        "summary": "Create Account",
        "description": "Create a new child account under the current user account",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCreateDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCreateResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResDTO"
                }
              }
            }
          },
          "403": {
            "description": "Account name already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Account Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/am/account/status/{id}": {
      "patch": {
        "operationId": "AccountController_updateStatus",
        "summary": "Update Account Status",
        "description": "Update account's active/inactive status",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccoutStatusDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountStatusUpdateResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status or account not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Account Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/am/users": {
      "get": {
        "operationId": "UserController_listAccountUsers",
        "summary": "List Users",
        "description": "Retrieve a paginated list of users.\n    - Supports filtering and sorting\n    - Includes role information\n    - Supports search by name\n    - Returns active users by default",
        "parameters": [
          {
            "name": "filter",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users with pagination metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "User Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/am/user/{id}": {
      "get": {
        "operationId": "UserController_getUserById",
        "summary": "Get User Details",
        "description": "Retrieve detailed information about a specific user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserViewResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID or user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "User Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "patch": {
        "operationId": "UserController_updateUser",
        "summary": "Update User",
        "description": "Update an existing user's information",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "User Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      },
      "delete": {
        "operationId": "UserController_deleteUser",
        "summary": "Delete User",
        "description": "Soft delete a user from the system",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleteResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Cannot delete self or insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "User Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/am/user": {
      "post": {
        "operationId": "UserController_createUser",
        "summary": "Create User",
        "description": "Create and invite a new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created and invitation sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or role not specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResDTO"
                }
              }
            }
          },
          "403": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "User Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/am/user/status/{id}": {
      "patch": {
        "operationId": "UserController_updateStatus",
        "summary": "Update User Status",
        "description": "Update user's active/inactive status",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserStatusUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User status updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStatusUpdateResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status or user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "User Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/am/module/get-module": {
      "get": {
        "operationId": "ModuleController_listModules",
        "summary": "List Modules & Capabilities",
        "description": "Retrieve all system modules and their capabilities.\n    - Returns complete module hierarchy\n    - Includes all available capabilities\n    - Used for role management\n    - Required for permission setup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of modules with their capabilities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModuleResponseDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Module Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/am/roles": {
      "get": {
        "operationId": "RoleController_listRoles",
        "summary": "List Roles",
        "description": "Retrieve paginated list of roles.\n    - Includes role capabilities\n    - Supports filtering and sorting\n    - Returns active roles by default\n    - Supports search by role name",
        "parameters": [
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter format: {\n      where: [\n        {\n          isSearch: boolean,\n          key: string,\n          value: any\n        }\n      ],\n      orderBy: \"property_name ASC | DESC\"\n    }",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page (default: 10)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (default: 1)",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of roles retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleListResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Role Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/am/role/{id}": {
      "get": {
        "operationId": "RoleController_viewRole",
        "summary": "View Role Details",
        "description": "Get detailed information about a specific role.\n    - Includes all role capabilities\n    - Shows permission settings\n    - Validates role access",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Role ID to retrieve",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Role Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/am/role": {
      "post": {
        "operationId": "RoleController_createRole",
        "summary": "Create Role",
        "description": "Create a new role with capabilities.\n    - Assigns role capabilities\n    - Validates role name uniqueness\n    - Creates role-capability mappings\n    - Maintains creation audit",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreateDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Role created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleCreateResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResDTO"
                }
              }
            }
          },
          "403": {
            "description": "Role name already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Role Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/am/role/{roleID}": {
      "patch": {
        "operationId": "RoleController_updateRole",
        "summary": "Update Role",
        "description": "Update an existing role.\n    - Updates role details\n    - Modifies capabilities\n    - Maintains update history\n    - Validates role access",
        "parameters": [
          {
            "name": "roleID",
            "required": true,
            "in": "path",
            "description": "Role ID to update",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleUpdateResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResDTO"
                }
              }
            }
          },
          "403": {
            "description": "Role name already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenExceptionResDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Role Management"
        ],
        "security": [
          {
            "access-token": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "PD V2 API",
    "description": "The PD V2 API Documentation",
    "version": "1.0",
    "contact": {},
    "x-logo": {
      "url": "pd-logo.png"
    },
    "x-tagGroups": [
      {
        "name": "Core APIs"
      }
    ]
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication and authorization endpoints"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "access-token": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "in": "header"
      }
    },
    "schemas": {
      "LoginUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com",
            "description": "Email address of the user"
          },
          "password": {
            "type": "string",
            "example": "Password123!",
            "description": "User password",
            "minLength": 8
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "isNewUser": {
            "type": "boolean",
            "example": false
          },
          "preference": {
            "type": "object",
            "example": {
              "theme": "dark",
              "language": "en"
            }
          },
          "role": {
            "type": "string",
            "example": "USER"
          },
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ..."
          },
          "account": {
            "type": "object",
            "example": {
              "id": 1,
              "status": "ACTIVE",
              "currency": "USD",
              "timezone": "UTC"
            }
          },
          "capabilities": {
            "example": [
              "READ",
              "WRITE",
              "CREATE_CAMPAIGN"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisherAccounts": {
            "example": [
              1,
              2,
              3
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "agencyAccounts": {
            "example": [
              4,
              5,
              6
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "advertiserAccounts": {
            "example": [
              7,
              8,
              9
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "isNewUser",
          "preference",
          "role",
          "accessToken",
          "account",
          "capabilities",
          "publisherAccounts",
          "agencyAccounts",
          "advertiserAccounts"
        ]
      },
      "BadRequestExceptionResDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 400
          },
          "code": {
            "type": "string",
            "example": "ERR_BAD_REQUEST"
          }
        },
        "required": [
          "status",
          "code"
        ]
      },
      "UnauthorizedExceptionResDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 401
          },
          "code": {
            "type": "string",
            "example": "ERR_ISE"
          }
        },
        "required": [
          "status",
          "code"
        ]
      },
      "NotFoundExceptionResDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 404
          },
          "code": {
            "type": "string",
            "example": "ERR_NOT_FOUND"
          },
          "message": {
            "type": "string",
            "example": "The requested resource could not be found."
          },
          "support": {
            "type": "string",
            "example": "Refer to the API documentation for the correct request format :  http://127.0.0.1:5500/docs/index.html#tag/Authentication-and-Authorization"
          }
        },
        "required": [
          "status",
          "code",
          "message",
          "support"
        ]
      },
      "TooManyRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 429
          },
          "code": {
            "type": "string",
            "example": "ERR_TOO_MANY_REQUESTS"
          },
          "msg": {
            "type": "string",
            "example": "Too Many Request Reached!"
          }
        },
        "required": [
          "status",
          "code",
          "msg"
        ]
      },
      "InternalServerErrorExceptionResDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 500
          },
          "code": {
            "type": "string",
            "example": "ERR_ISE"
          },
          "msg": {
            "type": "string",
            "example": "An unexpected error occurred on the server."
          }
        },
        "required": [
          "status",
          "code",
          "msg"
        ]
      },
      "ForgotPasswordDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com",
            "description": "Email address for password reset"
          }
        },
        "required": [
          "email"
        ]
      },
      "ForgotPasswordResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Password reset email sent successfully",
            "description": "Success message"
          }
        },
        "required": [
          "message"
        ]
      },
      "ChangePasswordDTO": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "example": "OldPassword123!",
            "description": "Current password"
          },
          "newPassword": {
            "type": "string",
            "example": "NewPassword123!",
            "description": "New password (must meet password requirements)",
            "minLength": 8
          },
          "confirmPassword": {
            "type": "string",
            "example": "NewPassword123!",
            "description": "Confirm new password (must match new password)"
          }
        },
        "required": [
          "oldPassword",
          "newPassword",
          "confirmPassword"
        ]
      },
      "ChangePasswordResponseDto": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "example": "success",
            "description": "Password change status"
          }
        },
        "required": [
          "msg"
        ]
      },
      "AccountResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "NETWORK",
              "AGENCY",
              "ADVERTISER",
              "PUBLISHER",
              "SUPER_ADMIN"
            ]
          },
          "selfManaged": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "accountType",
          "selfManaged",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "AccountListResponseDTO": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountResponseDTO"
            }
          },
          "meta": {
            "type": "object"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "AccountViewResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "NETWORK",
              "AGENCY",
              "ADVERTISER",
              "PUBLISHER",
              "SUPER_ADMIN"
            ]
          },
          "selfManaged": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "parentId": {
            "type": "number"
          },
          "companyId": {
            "type": "number"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "accountType",
          "selfManaged",
          "status",
          "createdAt",
          "updatedAt",
          "parentId",
          "companyId",
          "address1",
          "city",
          "state",
          "zip",
          "country"
        ]
      },
      "AccountCreateDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the account",
            "example": "Acme Corporation"
          },
          "description": {
            "type": "string",
            "description": "Description of the account",
            "example": "Global technology solutions provider"
          },
          "email": {
            "type": "string",
            "description": "Primary email address for the account",
            "example": "contact@acme.com"
          },
          "accountType": {
            "type": "string",
            "description": "Type of account",
            "enum": [
              "NETWORK",
              "AGENCY",
              "ADVERTISER",
              "PUBLISHER",
              "SUPER_ADMIN"
            ],
            "example": "AGENCY"
          },
          "selfManaged": {
            "type": "boolean",
            "description": "Whether the account is self-managed",
            "example": true
          },
          "phone": {
            "type": "string",
            "description": "Contact phone number",
            "example": "+1-555-123-4567"
          },
          "address1": {
            "type": "string",
            "description": "Primary street address",
            "example": "123 Business Avenue"
          },
          "address2": {
            "type": "string",
            "description": "Secondary address line",
            "example": "Suite 456"
          },
          "city": {
            "type": "string",
            "description": "City name",
            "example": "San Francisco"
          },
          "state": {
            "type": "string",
            "description": "State or province",
            "example": "CA"
          },
          "zip": {
            "type": "string",
            "description": "Postal/ZIP code",
            "example": "94105"
          },
          "country": {
            "type": "string",
            "description": "Country name",
            "example": "United States"
          },
          "parentId": {
            "type": "number",
            "description": "ID of the parent account",
            "example": 1
          },
          "website": {
            "type": "string",
            "description": "Company website URL",
            "example": "https://www.acme.com"
          },
          "companyId": {
            "type": "number",
            "description": "Company ID in the system",
            "example": 1001
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Timestamp of the last update"
          }
        },
        "required": [
          "name",
          "email",
          "accountType",
          "selfManaged",
          "phone",
          "address1",
          "city",
          "state",
          "zip",
          "country",
          "parentId",
          "companyId"
        ]
      },
      "AccountCreateResponseDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "ForbiddenExceptionResDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 403
          },
          "code": {
            "type": "string",
            "example": "ERR_FORBIDDEN"
          },
          "message": {
            "type": "string",
            "example": "You do not have permission to access this resource."
          },
          "support": {
            "type": "string",
            "example": "Refer to the API documentation for the correct request format : http://127.0.0.1:5500/docs/index.html#tag/Authentication-and-Authorization"
          }
        },
        "required": [
          "status",
          "code",
          "message",
          "support"
        ]
      },
      "AccountUpdateDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Updated account name",
            "example": "Acme Corp Global"
          },
          "description": {
            "type": "string",
            "description": "Updated account description",
            "example": "Leading technology solutions provider"
          },
          "email": {
            "type": "string",
            "description": "Updated email address",
            "example": "newcontact@acme.com"
          },
          "phone": {
            "type": "string",
            "description": "Updated phone number",
            "example": "+1-555-987-6543"
          },
          "website": {
            "type": "string",
            "description": "Updated website URL",
            "example": "https://www.acme-global.com"
          },
          "address1": {
            "type": "string",
            "description": "Updated primary address",
            "example": "456 Enterprise Street"
          },
          "address2": {
            "type": "string",
            "description": "Updated secondary address",
            "example": "Floor 12"
          },
          "city": {
            "type": "string",
            "description": "Updated city",
            "example": "New York"
          },
          "state": {
            "type": "string",
            "description": "Updated state",
            "example": "NY"
          },
          "country": {
            "type": "string",
            "description": "Updated country",
            "example": "United States"
          },
          "zip": {
            "type": "string",
            "description": "Updated ZIP/postal code",
            "example": "10001"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Timestamp of the last update"
          }
        }
      },
      "AccountUpdateResponseDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "AccoutStatusDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "New account status",
            "example": "ACTIVE",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED"
            ]
          }
        },
        "required": [
          "status"
        ]
      },
      "AccountStatusUpdateResponseDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "AccountDeleteResponseDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "UserListResponseDTO": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "List of users",
            "example": [
              {
                "id": 1,
                "email": "john.doe@example.com",
                "name": "John Doe",
                "status": "ACTIVE",
                "roleId": 1,
                "roleName": "ADMIN"
              }
            ]
          },
          "meta": {
            "type": "object",
            "example": {
              "totalItems": 20,
              "itemCount": 10,
              "itemsPerPage": 10,
              "totalPages": 2,
              "currentPage": 1
            }
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "UserViewResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "phone": {
            "type": "string",
            "example": "+1234567890"
          },
          "roleId": {
            "type": "number",
            "example": 1
          },
          "roleName": {
            "type": "string",
            "example": "ADMIN"
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "email",
          "phone",
          "roleId",
          "roleName"
        ]
      },
      "InviteUserDTO": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John",
            "description": "First name of the user"
          },
          "lastName": {
            "type": "string",
            "example": "Doe",
            "description": "Last name of the usexr"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com",
            "description": "Email address of the user"
          },
          "phone": {
            "type": "string",
            "example": "+1234567890",
            "description": "Phone number of the user"
          },
          "roleId": {
            "type": "number",
            "example": 1,
            "description": "Role ID to be assigned to the user"
          },
          "roleName": {
            "type": "string",
            "example": "ADMIN",
            "description": "Name of the role"
          },
          "accountId": {
            "type": "number",
            "example": 1,
            "description": "Account ID to be assigned to the user"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "phone",
          "roleId",
          "roleName",
          "accountId"
        ]
      },
      "UserCreateResponseDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User created successfully",
            "description": "Creation success message"
          }
        },
        "required": [
          "message"
        ]
      },
      "UserUpdateDTO": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John",
            "description": "Updated first name"
          },
          "lastName": {
            "type": "string",
            "example": "Doe",
            "description": "Updated last name"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com",
            "description": "Updated email address"
          },
          "phone": {
            "type": "string",
            "example": "+1234567890",
            "description": "Updated phone number"
          },
          "roleId": {
            "type": "number",
            "example": 1,
            "description": "Updated role ID"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "phone",
          "roleId"
        ]
      },
      "UserUpdateResponseDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User updated successfully",
            "description": "Update success message"
          }
        },
        "required": [
          "message"
        ]
      },
      "UserStatusUpdateDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED"
            ],
            "example": "ACTIVE",
            "description": "New status for the user"
          }
        },
        "required": [
          "status"
        ]
      },
      "UserStatusUpdateResponseDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User status updated successfully",
            "description": "Status update success message"
          }
        },
        "required": [
          "message"
        ]
      },
      "UserDeleteResponseDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User deleted successfully",
            "description": "Deletion success message"
          }
        },
        "required": [
          "message"
        ]
      },
      "CapabilityDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "user_management"
          },
          "displayName": {
            "type": "string",
            "example": "User Management"
          },
          "description": {
            "type": "string",
            "example": "Manage user operations"
          }
        },
        "required": [
          "id",
          "name",
          "displayName",
          "description"
        ]
      },
      "ModuleResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "USER"
          },
          "displayName": {
            "type": "string",
            "example": "User Module"
          },
          "description": {
            "type": "string",
            "example": "User management module"
          },
          "capabilities": {
            "description": "List of capabilities in this module",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CapabilityDTO"
            }
          }
        },
        "required": [
          "id",
          "name",
          "displayName",
          "description",
          "capabilities"
        ]
      },
      "RoleCapabilityDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "roleId": {
            "type": "number",
            "example": 1
          },
          "capabilityId": {
            "type": "number",
            "example": 1
          },
          "create": {
            "type": "boolean",
            "example": true
          },
          "read": {
            "type": "boolean",
            "example": true
          },
          "update": {
            "type": "boolean",
            "example": true
          },
          "delete": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "id",
          "roleId",
          "capabilityId",
          "create",
          "read",
          "update",
          "delete"
        ]
      },
      "RoleResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "ADMIN"
          },
          "description": {
            "type": "string",
            "example": "Administrator role with full access"
          },
          "status": {
            "type": "string",
            "example": "ACTIVE"
          },
          "capabilities": {
            "description": "List of capabilities assigned to this role",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleCapabilityDTO"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "status",
          "capabilities"
        ]
      },
      "RoleListResponseDTO": {
        "type": "object",
        "properties": {
          "items": {
            "description": "List of roles",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResponseDTO"
            }
          },
          "meta": {
            "type": "object",
            "example": {
              "totalItems": 20,
              "itemCount": 10,
              "itemsPerPage": 10,
              "totalPages": 2,
              "currentPage": 1
            }
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "RoleCreateDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "ADMIN",
            "description": "Name of the role"
          },
          "description": {
            "type": "string",
            "example": "Administrator role with full access",
            "description": "Description of the role"
          },
          "capabilities": {
            "description": "List of capabilities assigned to this role",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleCapabilityDTO"
            }
          }
        },
        "required": [
          "name",
          "description",
          "capabilities"
        ]
      },
      "RoleCreateResponseDTO": {
        "type": "object",
        "properties": {
          "role": {
            "type": "object",
            "example": {
              "id": 1,
              "name": "ADMIN",
              "description": "Administrator role"
            },
            "description": "Created role details"
          }
        },
        "required": [
          "role"
        ]
      },
      "RoleUpdateResponseDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Record updated successfully",
            "description": "Success message for role update"
          }
        },
        "required": [
          "message"
        ]
      }
    }
  }
}
